
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'CSV_FIXER', 'CSV_FIXER', 1, 20).
program(2, 'CSV_READER', 'CSV_FIXER.CSV_READER', 6, 10).
program(3, 'CSV_WRITER', 'CSV_FIXER.CSV_WRITER', 11, 15).
program(4, 'ROW_FIXER', 'CSV_FIXER.ROW_FIXER', 16, 19).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).
has_subprogram(1, 4).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'param', 'csv_infile_name', 'CSV_FIXER<-csv_infile_name', 2, 1).
port(2, 'param', 'csv_outfile_name', 'CSV_FIXER<-csv_outfile_name', 3, 2).
port(3, 'in', 'csv_infile', 'CSV_FIXER<-csv_infile', 4, 3).
port(4, 'out', 'csv_outfile', 'CSV_FIXER->csv_outfile', 5, 4).
port(5, 'param', 'csv_infile_name', 'CSV_FIXER.CSV_READER<-csv_infile_name', 7, 5).
port(6, 'in', 'csv_infile', 'CSV_FIXER.CSV_READER<-csv_infile', 8, 6).
port(7, 'out', 'csv_row', 'CSV_FIXER.CSV_READER->csv_row', 9, 7).
port(8, 'param', 'csv_outfile_name', 'CSV_FIXER.CSV_WRITER<-csv_outfile_name', 12, 8).
port(9, 'in', 'fixed_row', 'CSV_FIXER.CSV_WRITER<-fixed_row', 13, 9).
port(10, 'out', 'csv_outfile', 'CSV_FIXER.CSV_WRITER->csv_outfile', 14, 10).
port(11, 'in', 'csv_row', 'CSV_FIXER.ROW_FIXER<-csv_row', 17, 7).
port(12, 'out', 'fixed_row', 'CSV_FIXER.ROW_FIXER->fixed_row', 18, 9).

% FACT: port_alias(port_id, alias).

% FACT: port_uri_template(port_id, uri).

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(1, 2).
has_in_port(1, 3).
has_in_port(2, 5).
has_in_port(2, 6).
has_in_port(3, 8).
has_in_port(3, 9).
has_in_port(4, 11).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 4).
has_out_port(2, 7).
has_out_port(3, 10).
has_out_port(4, 12).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'csv_infile_name', '[csv_infile_name]').
data(2, 'csv_outfile_name', '[csv_outfile_name]').
data(3, 'csv_infile', '[csv_infile]').
data(4, 'csv_outfile', '[csv_outfile]').
data(5, 'csv_infile_name', 'CSV_FIXER[csv_infile_name]').
data(6, 'csv_infile', 'CSV_FIXER[csv_infile]').
data(7, 'csv_row', 'CSV_FIXER[csv_row]').
data(8, 'csv_outfile_name', 'CSV_FIXER[csv_outfile_name]').
data(9, 'fixed_row', 'CSV_FIXER[fixed_row]').
data(10, 'csv_outfile', 'CSV_FIXER[csv_outfile]').

% FACT: channel(channel_id, data_id).
channel(1, 4).
channel(2, 5).
channel(3, 6).
channel(4, 8).
channel(5, 9).
channel(6, 7).
channel(7, 1).
channel(8, 2).
channel(9, 3).
channel(10, 10).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(10, 1).
port_connects_to_channel(5, 2).
port_connects_to_channel(6, 3).
port_connects_to_channel(8, 4).
port_connects_to_channel(12, 5).
port_connects_to_channel(9, 5).
port_connects_to_channel(7, 6).
port_connects_to_channel(11, 6).
port_connects_to_channel(5, 7).
port_connects_to_channel(8, 8).
port_connects_to_channel(6, 9).
port_connects_to_channel(10, 10).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 2).
inflow_connects_to_channel(3, 3).
inflow_connects_to_channel(2, 4).
inflow_connects_to_channel(1, 7).
inflow_connects_to_channel(2, 8).
inflow_connects_to_channel(3, 9).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(4, 1).
outflow_connects_to_channel(4, 10).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).
